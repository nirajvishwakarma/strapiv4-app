apiVersion: v1
kind: Secret
metadata:
 name: pg-secret
 namespace: strapiv4
type: Opaque
data:
  POSTGRES_USER: c3RyYXBp 
  POSTGRES_PASSWORD: c3RyYXBp

---

apiVersion: v1
kind: ConfigMap
metadata:
 name: pg-config
 namespace: strapiv4
data:
  POSTGRES_DB: strapi
  POSTGRES_HOST: postgres


---

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: strapi
  namespace: strapiv4
provisioner: kubernetes.io/aws-ebs
parameters:
  type: gp2
reclaimPolicy: Retain
allowVolumeExpansion: true
mountOptions:
  - debug
volumeBindingMode: Immediate

---


apiVersion: apps/v1
kind: StatefulSet
metadata:
 name: postgres
 namespace: strapiv4
 labels:
   app: postgres
spec:
 replicas: 3
 selector:
   matchLabels:
     app: postgres
 serviceName: postgres
 template:
   metadata:
     labels:
       app: postgres
   spec:
     containers:
     - name: postgres
       image: postgres:14.2
       imagePullPolicy: "IfNotPresent"
       ports:
         - containerPort: 5432
       envFrom:
         - secretRef:
             name: pg-secret
         - configMapRef:
             name: pg-config
       resources:
         limits:
           cpu: 500m
           memory: "0.5Gi"
         requests:
           cpu: 500m
           memory: "0.5Gi"
       volumeMounts:
         - mountPath: /var/lib/postgres/data/
           name: pg-strapi
 volumeClaimTemplates:
   - metadata:
       name: pg-strapi
       annotations:
         volume.beta.kubernetes.io/storage-class: "strapi"
     spec:
       accessModes: [ "ReadWriteOnce" ]
       storageClassName: strapi
       resources:
         requests:
           storage: 10Gi
---

apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: strapiv4

spec:
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432

  selector:
    app: postgres

  type: LoadBalancer
